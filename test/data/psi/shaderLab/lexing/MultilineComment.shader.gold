0000: MULTI_LINE_COMMENT '/*\r\nRenders doubled sides objects without lighting. Useful for\r\ngrass, trees or foliage.\r\n\r\nThis shader renders two passes for all geometry, one\r\nfor opaque parts and one with semitransparent details.\r\n\r\nThis makes it possible to render transparent objects\r\nlike grass without them being sorted by depth.\r\n*/'
0308: NEW_LINE '\r\n'
0310: NEW_LINE '\r\n'
0312: SHADER_KEYWORD 'Shader'
0318: WHITESPACE ' '
0319: STRING_LITERAL '"Legacy Shaders/Transparent/Cutout/Soft Edge Unlit"'
0370: WHITESPACE ' '
0371: LBRACE '{'
0372: NEW_LINE '\r\n'
0374: PROPERTIES_KEYWORD 'Properties'
0384: WHITESPACE ' '
0385: LBRACE '{'
0386: NEW_LINE '\r\n'
0388: WHITESPACE '\t'
0389: IDENTIFIER '_Color'
0395: WHITESPACE ' '
0396: LPAREN '('
0397: STRING_LITERAL '"Main Color"'
0409: COMMA ','
0410: WHITESPACE ' '
0411: COLOR_KEYWORD 'Color'
0416: RPAREN ')'
0417: WHITESPACE ' '
0418: EQUALS '='
0419: WHITESPACE ' '
0420: LPAREN '('
0421: NUMERIC_LITERAL '1'
0422: COMMA ','
0423: WHITESPACE ' '
0424: NUMERIC_LITERAL '1'
0425: COMMA ','
0426: WHITESPACE ' '
0427: NUMERIC_LITERAL '1'
0428: COMMA ','
0429: WHITESPACE ' '
0430: NUMERIC_LITERAL '1'
0431: RPAREN ')'
0432: NEW_LINE '\r\n'
0434: WHITESPACE '\t'
0435: IDENTIFIER '_MainTex'
0443: WHITESPACE ' '
0444: LPAREN '('
0445: STRING_LITERAL '"Base (RGB) Alpha (A)"'
0467: COMMA ','
0468: WHITESPACE ' '
0469: TEXTURE_2D_KEYWORD '2D'
0471: RPAREN ')'
0472: WHITESPACE ' '
0473: EQUALS '='
0474: WHITESPACE ' '
0475: STRING_LITERAL '"white"'
0482: WHITESPACE ' '
0483: LBRACE '{'
0484: RBRACE '}'
0485: NEW_LINE '\r\n'
0487: WHITESPACE '\t'
0488: IDENTIFIER '_Cutoff'
0495: WHITESPACE ' '
0496: LPAREN '('
0497: STRING_LITERAL '"Base Alpha cutoff"'
0516: COMMA ','
0517: WHITESPACE ' '
0518: RANGE_KEYWORD 'Range'
0523: WHITESPACE ' '
0524: LPAREN '('
0525: NUMERIC_LITERAL '0'
0526: COMMA ','
0527: NUMERIC_LITERAL '.9'
0529: RPAREN ')'
0530: RPAREN ')'
0531: WHITESPACE ' '
0532: EQUALS '='
0533: WHITESPACE ' '
0534: NUMERIC_LITERAL '.5'
0536: NEW_LINE '\r\n'
0538: RBRACE '}'
0539: NEW_LINE '\r\n'
0541: NEW_LINE '\r\n'
0543: SUB_SHADER_KEYWORD 'SubShader'
0552: WHITESPACE ' '
0553: LBRACE '{'
0554: NEW_LINE '\r\n'
0556: WHITESPACE '\t'
0557: TAGS_KEYWORD 'Tags'
0561: WHITESPACE ' '
0562: LBRACE '{'
0563: WHITESPACE ' '
0564: STRING_LITERAL '"Queue"'
0571: EQUALS '='
0572: STRING_LITERAL '"AlphaTest"'
0583: WHITESPACE ' '
0584: STRING_LITERAL '"IgnoreProjector"'
0601: EQUALS '='
0602: STRING_LITERAL '"True"'
0608: WHITESPACE ' '
0609: STRING_LITERAL '"RenderType"'
0621: EQUALS '='
0622: STRING_LITERAL '"TransparentCutout"'
0641: WHITESPACE ' '
0642: RBRACE '}'
0643: NEW_LINE '\r\n'
0645: WHITESPACE '\t'
0646: LIGHTING_KEYWORD 'Lighting'
0654: WHITESPACE ' '
0655: OFF_KEYWORD 'off'
0658: NEW_LINE '\r\n'
0660: WHITESPACE '\t'
0661: NEW_LINE '\r\n'
0663: WHITESPACE '\t'
0664: END_OF_LINE_COMMENT '// Render both front and back facing polygons.'
0710: NEW_LINE '\r\n'
0712: WHITESPACE '\t'
0713: CULL_KEYWORD 'Cull'
0717: WHITESPACE ' '
0718: OFF_KEYWORD 'Off'
0721: NEW_LINE '\r\n'
0723: WHITESPACE '\t'
0724: NEW_LINE '\r\n'
0726: WHITESPACE '\t'
0727: END_OF_LINE_COMMENT '// first pass:'
0741: NEW_LINE '\r\n'
0743: WHITESPACE '\t'
0744: END_OF_LINE_COMMENT '//   render any pixels that are more than [_Cutoff] opaque'
0802: NEW_LINE '\r\n'
0804: WHITESPACE '\t'
0805: PASS_KEYWORD 'Pass'
0809: WHITESPACE ' '
0810: LBRACE '{'
0811: WHITESPACE '  '
0813: NEW_LINE '\r\n'
0815: WHITESPACE '\t\t'
0817: CG_PROGRAM 'CGPROGRAM'
0826: CG_CONTENT '\r\n\t\t\t#pragma vertex vert\r\n\t\t\t#pragma fragment frag\r\n\t\t\t#pragma multi_compile_fog\r\n\t\t\t\r\n\t\t\t#include "UnityCG.cginc"\r\n\r\n\t\t\tstruct appdata_t {\r\n\t\t\t\tfloat4 vertex : POSITION;\r\n\t\t\t\tfloat4 color : COLOR;\r\n\t\t\t\tfloat2 texcoord : TEXCOORD0;\r\n\t\t\t\tUNITY_VERTEX_INPUT_INSTANCE_ID\r\n\t\t\t};\r\n\r\n\t\t\tstruct v2f {\r\n\t\t\t\tfloat4 vertex : SV_POSITION;\r\n\t\t\t\tfixed4 color : COLOR;\r\n\t\t\t\tfloat2 texcoord : TEXCOORD0;\r\n\t\t\t\tUNITY_FOG_COORDS(1)\r\n\t\t\t\tUNITY_VERTEX_OUTPUT_STEREO\r\n\t\t\t};\r\n\r\n\t\t\tsampler2D _MainTex;\r\n\t\t\tfloat4 _MainTex_ST;\r\n\t\t\tfixed _Cutoff;\r\n\t\t\t\r\n\t\t\tv2f vert (appdata_t v)\r\n\t\t\t{\r\n\t\t\t\tv2f o;\r\n\t\t\t\tUNITY_SETUP_INSTANCE_ID(v);\r\n\t\t\t\tUNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\r\n\t\t\t\to.vertex = UnityObjectToClipPos(v.vertex);\r\n\t\t\t\to.color = v.color;\r\n\t\t\t\to.texcoord = TRANSFORM_TEX(v.texcoord, _MainTex);\r\n\t\t\t\tUNITY_TRANSFER_FOG(o,o.vertex);\r\n\t\t\t\treturn o;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfixed4 _Color;\r\n\t\t\tfixed4 frag (v2f i) : SV_Target\r\n\t\t\t{\r\n\t\t\t\thalf4 col = _Color * tex2D(_MainTex, i.texcoord);\r\n\t\t\t\tclip(col.a - _Cutoff);\r\n\t\t\t\tUNITY_APPLY_FOG(i.fogCoord, col);\r\n\t\t\t\treturn col;\r\n\t\t\t}\r\n\t\t'
1877: CG_END 'ENDCG'
1882: NEW_LINE '\r\n'
1884: WHITESPACE '\t'
1885: RBRACE '}'
1886: NEW_LINE '\r\n'
1888: NEW_LINE '\r\n'
1890: WHITESPACE '\t'
1891: END_OF_LINE_COMMENT '// Second pass:'
1906: NEW_LINE '\r\n'
1908: WHITESPACE '\t'
1909: END_OF_LINE_COMMENT '//   render the semitransparent details.'
1949: NEW_LINE '\r\n'
1951: WHITESPACE '\t'
1952: PASS_KEYWORD 'Pass'
1956: WHITESPACE ' '
1957: LBRACE '{'
1958: NEW_LINE '\r\n'
1960: WHITESPACE '\t\t'
1962: TAGS_KEYWORD 'Tags'
1966: WHITESPACE ' '
1967: LBRACE '{'
1968: WHITESPACE ' '
1969: STRING_LITERAL '"RequireOption"'
1984: WHITESPACE ' '
1985: EQUALS '='
1986: WHITESPACE ' '
1987: STRING_LITERAL '"SoftVegetation"'
2003: WHITESPACE ' '
2004: RBRACE '}'
2005: NEW_LINE '\r\n'
2007: WHITESPACE '\t\t'
2009: NEW_LINE '\r\n'
2011: WHITESPACE '\t\t'
2013: END_OF_LINE_COMMENT '// Dont write to the depth buffer'
2046: NEW_LINE '\r\n'
2048: WHITESPACE '\t\t'
2050: ZWRITE_KEYWORD 'ZWrite'
2056: WHITESPACE ' '
2057: OFF_KEYWORD 'off'
2060: NEW_LINE '\r\n'
2062: WHITESPACE '\t\t'
2064: NEW_LINE '\r\n'
2066: WHITESPACE '\t\t'
2068: END_OF_LINE_COMMENT '// Set up alpha blending'
2092: NEW_LINE '\r\n'
2094: WHITESPACE '\t\t'
2096: BLEND_KEYWORD 'Blend'
2101: WHITESPACE ' '
2102: IDENTIFIER 'SrcAlpha'
2110: WHITESPACE ' '
2111: IDENTIFIER 'OneMinusSrcAlpha'
2127: NEW_LINE '\r\n'
2129: WHITESPACE '\t\t'
2131: NEW_LINE '\r\n'
2133: WHITESPACE '\t\t'
2135: CG_PROGRAM 'CGPROGRAM'
2144: CG_CONTENT '\r\n\t\t\t#pragma vertex vert\r\n\t\t\t#pragma fragment frag\r\n\t\t\t#pragma multi_compile_fog\r\n\t\t\t\r\n\t\t\t#include "UnityCG.cginc"\r\n\r\n\t\t\tstruct appdata_t {\r\n\t\t\t\tfloat4 vertex : POSITION;\r\n\t\t\t\tfloat4 color : COLOR;\r\n\t\t\t\tfloat2 texcoord : TEXCOORD0;\r\n\t\t\t\tUNITY_VERTEX_INPUT_INSTANCE_ID\r\n\t\t\t};\r\n\r\n\t\t\tstruct v2f {\r\n\t\t\t\tfloat4 vertex : SV_POSITION;\r\n\t\t\t\tfixed4 color : COLOR;\r\n\t\t\t\tfloat2 texcoord : TEXCOORD0;\r\n\t\t\t\tUNITY_FOG_COORDS(1)\r\n\t\t\t\tUNITY_VERTEX_OUTPUT_STEREO\r\n\t\t\t};\r\n\r\n\t\t\tsampler2D _MainTex;\r\n\t\t\tfloat4 _MainTex_ST;\r\n\t\t\tfloat _Cutoff;\r\n\t\t\t\r\n\t\t\tv2f vert (appdata_t v)\r\n\t\t\t{\r\n\t\t\t\tv2f o;\r\n\t\t\t\tUNITY_SETUP_INSTANCE_ID(v);\r\n\t\t\t\tUNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\r\n\t\t\t\to.vertex = UnityObjectToClipPos(v.vertex);\r\n\t\t\t\to.color = v.color;\r\n\t\t\t\to.texcoord = TRANSFORM_TEX(v.texcoord, _MainTex);\r\n\t\t\t\tUNITY_TRANSFER_FOG(o,o.vertex);\r\n\t\t\t\treturn o;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfixed4 _Color;\r\n\t\t\tfixed4 frag (v2f i) : SV_Target\r\n\t\t\t{\r\n\t\t\t\thalf4 col = _Color * tex2D(_MainTex, i.texcoord);\r\n\t\t\t\tclip(-(col.a - _Cutoff));\r\n\t\t\t\tUNITY_APPLY_FOG(i.fogCoord, col);\r\n\t\t\t\treturn col;\r\n\t\t\t}\r\n\t\t'
3198: CG_END 'ENDCG'
3203: NEW_LINE '\r\n'
3205: WHITESPACE '\t'
3206: RBRACE '}'
3207: NEW_LINE '\r\n'
3209: RBRACE '}'
3210: NEW_LINE '\r\n'
3212: NEW_LINE '\r\n'
3214: RBRACE '}'
3215: NEW_LINE '\r\n'
3217: NEW_LINE '\r\n'
3219: NEW_LINE '\r\n'
