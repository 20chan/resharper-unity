Language: PsiLanguageType:SHADERLAB
IShaderLabFile
  IShaderCommand
    ShaderLabTokenType+FixedTokenElement(type:SHADER_KEYWORD, text:Shader)
    IShaderValue
      ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"XXX")
      ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
      IPropertiesCommand
        ShaderLabTokenType+FixedTokenElement(type:PROPERTIES_KEYWORD, text:Properties)
        IPropertiesValue
          ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_IlluminCol)
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"XXX")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            ISimplePropertyType
              ShaderLabTokenType+FixedTokenElement(type:COLOR_KEYWORD, text:Color)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            IVectorPropertyValue
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Color)
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"XXX")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            ISimplePropertyType
              ShaderLabTokenType+FixedTokenElement(type:COLOR_KEYWORD, text:Color)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            IVectorPropertyValue
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_SpecColor)
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"XXX")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            ISimplePropertyType
              ShaderLabTokenType+FixedTokenElement(type:COLOR_KEYWORD, text:Color)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            IVectorPropertyValue
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Emission)
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"XXX")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            ISimplePropertyType
              ShaderLabTokenType+FixedTokenElement(type:COLOR_KEYWORD, text:Color)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            IVectorPropertyValue
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_Shininess)
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"XXX")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            IRangePropertyType
              ShaderLabTokenType+FixedTokenElement(type:RANGE_KEYWORD, text:Range)
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            IScalarPropertyValue
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.0)
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_MainTex)
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"XXX")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            ISimplePropertyType
              ShaderLabTokenType+FixedTokenElement(type:TEXTURE_2D_KEYWORD, text:2D)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            ITexturePropertyValue
              ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"XXX")
              ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
              ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
          ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
      ISubShaderCommand
        ShaderLabTokenType+FixedTokenElement(type:SUB_SHADER_KEYWORD, text:SubShader)
        ISubShaderValue
          ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
          IRegularPassDef
            ShaderLabTokenType+FixedTokenElement(type:PASS_KEYWORD, text:Pass)
            IRegularPassValue
              ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
              IMaterialCommand
                ShaderLabTokenType+FixedTokenElement(type:MATERIAL_KEYWORD, text:Material)
                IMaterialValue
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  IDiffuseCommand
                    ShaderLabTokenType+FixedTokenElement(type:DIFFUSE_KEYWORD, text:Diffuse)
                    IColorValue
                      IReferencedProperty
                        ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                        IShaderLabIdentifier
                          Identifier(type:IDENTIFIER, text:_Color)
                        ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                  IAmbientCommand
                    ShaderLabTokenType+FixedTokenElement(type:AMBIENT_KEYWORD, text:Ambient)
                    IColorValue
                      IReferencedProperty
                        ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                        IShaderLabIdentifier
                          Identifier(type:IDENTIFIER, text:_Color)
                        ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                  IShininessCommand
                    ShaderLabTokenType+FixedTokenElement(type:SHININESS_KEYWORD, text:Shininess)
                    INumericValue
                      IReferencedProperty
                        ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                        IShaderLabIdentifier
                          Identifier(type:IDENTIFIER, text:_Shininess)
                        ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                  ISpecularCommand
                    ShaderLabTokenType+FixedTokenElement(type:SPECULAR_KEYWORD, text:Specular)
                    IColorValue
                      IReferencedProperty
                        ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                        IShaderLabIdentifier
                          Identifier(type:IDENTIFIER, text:_SpecColor)
                        ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                  IEmissionCommand
                    ShaderLabTokenType+FixedTokenElement(type:EMISSION_KEYWORD, text:Emission)
                    IColorValue
                      IReferencedProperty
                        ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                        IShaderLabIdentifier
                          Identifier(type:IDENTIFIER, text:_Emission)
                        ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
              ILightingCommand
                ShaderLabTokenType+FixedTokenElement(type:LIGHTING_KEYWORD, text:Lighting)
                IOnOffValue
                  ShaderLabTokenType+FixedTokenElement(type:ON_KEYWORD, text:On)
              ISetTextureCommand
                ShaderLabTokenType+FixedTokenElement(type:SET_TEXTURE_KEYWORD, text:SetTexture)
                ISetTextureValue
                  IReferencedProperty
                    ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                    IShaderLabIdentifier
                      Identifier(type:IDENTIFIER, text:_MainTex)
                    ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  IConstantColorCommand
                    ShaderLabTokenType+FixedTokenElement(type:CONSTANT_COLOR_KEYWORD, text:ConstantColor)
                    IColorValue
                      IReferencedProperty
                        ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                        IShaderLabIdentifier
                          Identifier(type:IDENTIFIER, text:_IlluminCol)
                        ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                  ICombineCommand
                    ShaderLabTokenType+FixedTokenElement(type:COMBINE_KEYWORD, text:Combine)
                    ICombineValue
                      ICombineCalculation
                        ICombineInterpolation
                          ICombineSrc
                            ShaderLabTokenType+FixedTokenElement(type:CONSTANT_KEYWORD, text:Constant)
                          ShaderLabTokenType+FixedTokenElement(type:LERP_KEYWORD, text:Lerp)
                          ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                          ICombineSrc
                            ShaderLabTokenType+FixedTokenElement(type:TEXTURE_KEYWORD, text:Texture)
                          ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
                          ICombineSrc
                            ShaderLabTokenType+FixedTokenElement(type:PREVIOUS_KEYWORD, text:Previous)
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
              ISetTextureCommand
                ShaderLabTokenType+FixedTokenElement(type:SET_TEXTURE_KEYWORD, text:SetTexture)
                ISetTextureValue
                  IReferencedProperty
                    ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                    IShaderLabIdentifier
                      Identifier(type:IDENTIFIER, text:_MainTex)
                    ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  ICombineCommand
                    ShaderLabTokenType+FixedTokenElement(type:COMBINE_KEYWORD, text:Combine)
                    ICombineValue
                      ICombineCalculation
                        ICombineOperation
                          ICombineSrc
                            ShaderLabTokenType+FixedTokenElement(type:PREVIOUS_KEYWORD, text:Previous)
                          ShaderLabTokenType+FixedTokenElement(type:MULTIPLY, text:*)
                          ICombineSrc
                            ShaderLabTokenType+FixedTokenElement(type:TEXTURE_KEYWORD, text:Texture)
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
              ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
          ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
      ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})

