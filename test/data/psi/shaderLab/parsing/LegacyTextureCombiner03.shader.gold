Language: PsiLanguageType:SHADERLAB
IShaderLabFile
  IShaderCommand
    ShaderLabTokenType+FixedTokenElement(type:SHADER_KEYWORD, text:Shader)
    Whitespace(type:WHITESPACE, text: ) spaces: " "
    IShaderValue
      ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Examples/Self-Illumination 2")
      Whitespace(type:WHITESPACE, text: ) spaces: " "
      ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      Whitespace(type:WHITESPACE, text:    ) spaces: "    "
      IPropertiesCommand
        ShaderLabTokenType+FixedTokenElement(type:PROPERTIES_KEYWORD, text:Properties)
        Whitespace(type:WHITESPACE, text: ) spaces: " "
        IPropertiesValue
          ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:        ) spaces: "        "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_IlluminCol)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Self-Illumination color (RGB)")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+FixedTokenElement(type:COLOR_KEYWORD, text:Color)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IVectorPropertyValue
              ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
              ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
              ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
              ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:        ) spaces: "        "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_MainTex)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Base (RGB) Self-Illumination (A)")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+FixedTokenElement(type:TEXTURE_2D_KEYWORD, text:2D)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ITexturePropertyValue
              ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"white")
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
              ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      Whitespace(type:WHITESPACE, text:    ) spaces: "    "
      ISubShaderCommand
        ShaderLabTokenType+FixedTokenElement(type:SUB_SHADER_KEYWORD, text:SubShader)
        Whitespace(type:WHITESPACE, text: ) spaces: " "
        ISubShaderValue
          ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:        ) spaces: "        "
          IRegularPassDef
            ShaderLabTokenType+FixedTokenElement(type:PASS_KEYWORD, text:Pass)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRegularPassValue
              ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:            ) spaces: "            "
              EndOfLineComment(type:END_OF_LINE_COMMENT, text:// Set up basic white vertex lighting) spaces: "// Set up basic white vertex lighting"
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:            ) spaces: "            "
              IMaterialCommand
                ShaderLabTokenType+FixedTokenElement(type:MATERIAL_KEYWORD, text:Material)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                IMaterialValue
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  IDiffuseCommand
                    ShaderLabTokenType+FixedTokenElement(type:DIFFUSE_KEYWORD, text:Diffuse)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IColorValue
                      IVectorPropertyValue
                        ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                        ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                        ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                        ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                        ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                        ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                        ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                        ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                        ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  IAmbientCommand
                    ShaderLabTokenType+FixedTokenElement(type:AMBIENT_KEYWORD, text:Ambient)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IColorValue
                      IVectorPropertyValue
                        ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                        ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                        ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                        ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                        ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                        ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                        ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
                        ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:1)
                        ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:            ) spaces: "            "
              ILightingCommand
                ShaderLabTokenType+FixedTokenElement(type:LIGHTING_KEYWORD, text:Lighting)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                IOnOffValue
                  ShaderLabTokenType+FixedTokenElement(type:ON_KEYWORD, text:On)
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:            ) spaces: "            "
              EndOfLineComment(type:END_OF_LINE_COMMENT, text:// Use texture alpha to blend up to white (= full illumination)) spaces: "// Use texture alpha to blend up to white (= full illumination)"
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:            ) spaces: "            "
              ISetTextureCommand
                ShaderLabTokenType+FixedTokenElement(type:SET_TEXTURE_KEYWORD, text:SetTexture)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                ISetTextureValue
                  IReferencedProperty
                    ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                    IShaderLabIdentifier
                      Identifier(type:IDENTIFIER, text:_MainTex)
                    ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  EndOfLineComment(type:END_OF_LINE_COMMENT, text:// Pull the color property into this blender) spaces: "// Pull the color property into this blender"
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  IConstantColorCommand
                    ShaderLabTokenType+FixedTokenElement(type:CONSTANT_COLOR_KEYWORD, text:ConstantColor)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IColorValue
                      IReferencedProperty
                        ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                        IShaderLabIdentifier
                          Identifier(type:IDENTIFIER, text:_IlluminCol)
                        ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  EndOfLineComment(type:END_OF_LINE_COMMENT, text:// And use the texture's alpha to blend between it and) spaces: "// And use the texture's alpha to blend between it and"
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  EndOfLineComment(type:END_OF_LINE_COMMENT, text:// vertex color) spaces: "// vertex color"
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  ICombineCommand
                    ShaderLabTokenType+FixedTokenElement(type:COMBINE_KEYWORD, text:Combine)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    ICombineValue
                      ICombineCalculation
                        ICombineInterpolation
                          ICombineSrc
                            ShaderLabTokenType+FixedTokenElement(type:CONSTANT_KEYWORD, text:Constant)
                          Whitespace(type:WHITESPACE, text: ) spaces: " "
                          ShaderLabTokenType+FixedTokenElement(type:LERP_KEYWORD, text:Lerp)
                          ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
                          ICombineSrc
                            ShaderLabTokenType+FixedTokenElement(type:TEXTURE_KEYWORD, text:Texture)
                          ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
                          Whitespace(type:WHITESPACE, text: ) spaces: " "
                          ICombineSrc
                            ShaderLabTokenType+FixedTokenElement(type:PREVIOUS_KEYWORD, text:Previous)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:            ) spaces: "            "
              EndOfLineComment(type:END_OF_LINE_COMMENT, text:// Multiply in texture) spaces: "// Multiply in texture"
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:            ) spaces: "            "
              ISetTextureCommand
                ShaderLabTokenType+FixedTokenElement(type:SET_TEXTURE_KEYWORD, text:SetTexture)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                ISetTextureValue
                  IReferencedProperty
                    ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                    IShaderLabIdentifier
                      Identifier(type:IDENTIFIER, text:_MainTex)
                    ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  ICombineCommand
                    ShaderLabTokenType+FixedTokenElement(type:COMBINE_KEYWORD, text:Combine)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    ICombineValue
                      ICombineCalculation
                        ICombineOperation
                          ICombineSrc
                            ShaderLabTokenType+FixedTokenElement(type:PREVIOUS_KEYWORD, text:Previous)
                          Whitespace(type:WHITESPACE, text: ) spaces: " "
                          ShaderLabTokenType+FixedTokenElement(type:MULTIPLY, text:*)
                          Whitespace(type:WHITESPACE, text: ) spaces: " "
                          ICombineSrc
                            ShaderLabTokenType+FixedTokenElement(type:TEXTURE_KEYWORD, text:Texture)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:        ) spaces: "        "
              ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})

