Language: PsiLanguageType:SHADERLAB
IShaderLabFile
  IShaderCommand
    ShaderLabTokenType+FixedTokenElement(type:SHADER_KEYWORD, text:Shader)
    Whitespace(type:WHITESPACE, text: ) spaces: " "
    IShaderValue
      ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Simple Alpha Test")
      Whitespace(type:WHITESPACE, text: ) spaces: " "
      ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      Whitespace(type:WHITESPACE, text:    ) spaces: "    "
      IPropertiesCommand
        ShaderLabTokenType+FixedTokenElement(type:PROPERTIES_KEYWORD, text:Properties)
        Whitespace(type:WHITESPACE, text: ) spaces: " "
        IPropertiesValue
          ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:        ) spaces: "        "
          IPropertyDeclaration
            IShaderLabIdentifier
              Identifier(type:IDENTIFIER, text:_MainTex)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:LPAREN, text:()
            ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Base (RGB) Transparency (A)")
            ShaderLabTokenType+FixedTokenElement(type:COMMA, text:,)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ISimplePropertyType
              ShaderLabTokenType+FixedTokenElement(type:TEXTURE_2D_KEYWORD, text:2D)
            ShaderLabTokenType+FixedTokenElement(type:RPAREN, text:))
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ShaderLabTokenType+FixedTokenElement(type:EQUALS, text:=)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            ITexturePropertyValue
              ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"")
              Whitespace(type:WHITESPACE, text: ) spaces: " "
              ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
              ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      Whitespace(type:WHITESPACE, text:    ) spaces: "    "
      ISubShaderCommand
        ShaderLabTokenType+FixedTokenElement(type:SUB_SHADER_KEYWORD, text:SubShader)
        Whitespace(type:WHITESPACE, text: ) spaces: " "
        ISubShaderValue
          ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:        ) spaces: "        "
          IRegularPassDef
            ShaderLabTokenType+FixedTokenElement(type:PASS_KEYWORD, text:Pass)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRegularPassValue
              ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:            ) spaces: "            "
              EndOfLineComment(type:END_OF_LINE_COMMENT, text:// Only render pixels with an alpha larger than 50%) spaces: "// Only render pixels with an alpha larger than 50%"
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:            ) spaces: "            "
              IAlphaTestCommand
                ShaderLabTokenType+FixedTokenElement(type:ALPHA_TEST_KEYWORD, text:AlphaTest)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                IAlphaTestValue
                  IComparisonFunctionValue
                    ShaderLabTokenType+FixedTokenElement(type:GREATER_KEYWORD, text:Greater)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  INumericValue
                    ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:0.5)
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:            ) spaces: "            "
              ISetTextureCommand
                ShaderLabTokenType+FixedTokenElement(type:SET_TEXTURE_KEYWORD, text:SetTexture)
                Whitespace(type:WHITESPACE, text: ) spaces: " "
                ISetTextureValue
                  IReferencedProperty
                    ShaderLabTokenType+FixedTokenElement(type:LBRACK, text:[)
                    IShaderLabIdentifier
                      Identifier(type:IDENTIFIER, text:_MainTex)
                    ShaderLabTokenType+FixedTokenElement(type:RBRACK, text:])
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ICombineCommand
                    ShaderLabTokenType+FixedTokenElement(type:COMBINE_KEYWORD, text:Combine)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    ICombineValue
                      ICombineCalculation
                        ICombineOperation
                          ICombineSrc
                            ShaderLabTokenType+FixedTokenElement(type:TEXTURE_KEYWORD, text:Texture)
                  Whitespace(type:WHITESPACE, text: ) spaces: " "
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:        ) spaces: "        "
              ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})

