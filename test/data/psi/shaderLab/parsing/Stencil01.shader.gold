Language: PsiLanguageType:SHADERLAB
IShaderLabFile
  IShaderCommand
    ShaderLabTokenType+FixedTokenElement(type:SHADER_KEYWORD, text:Shader)
    Whitespace(type:WHITESPACE, text: ) spaces: " "
    IShaderValue
      ShaderLabTokenType+GenericTokenElement(type:STRING_LITERAL, text:"Unlit/SingleColor")
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      Whitespace(type:WHITESPACE, text:    ) spaces: "    "
      ISubShaderCommand
        ShaderLabTokenType+FixedTokenElement(type:SUB_SHADER_KEYWORD, text:SubShader)
        NewLine(type:NEW_LINE, text:\n) spaces: "\n"
        Whitespace(type:WHITESPACE, text:    ) spaces: "    "
        ISubShaderValue
          ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:        ) spaces: "        "
          IRegularPassDef
            ShaderLabTokenType+FixedTokenElement(type:PASS_KEYWORD, text:Pass)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRegularPassValue
              ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:            ) spaces: "            "
              IStencilCommand
                ShaderLabTokenType+FixedTokenElement(type:STENCIL_KEYWORD, text:Stencil)
                NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                IStencilValue
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  IRefCommand
                    ShaderLabTokenType+FixedTokenElement(type:REF_KEYWORD, text:Ref)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    INumericValue
                      ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:255)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  IReadMaskCommand
                    ShaderLabTokenType+FixedTokenElement(type:READ_MASK_KEYWORD, text:ReadMask)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    INumericValue
                      ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:134)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  IWriteMaskCommand
                    ShaderLabTokenType+FixedTokenElement(type:WRITE_MASK_KEYWORD, text:WriteMask)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    INumericValue
                      ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:155)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  ICompCommand
                    ShaderLabTokenType+FixedTokenElement(type:COMP_KEYWORD, text:Comp)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IComparisonFunctionValue
                      ShaderLabTokenType+FixedTokenElement(type:GREATER_KEYWORD, text:Greater)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  IPassCommand
                    ShaderLabTokenType+FixedTokenElement(type:PASS_KEYWORD, text:Pass)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IStencilOperation
                      ShaderLabTokenType+FixedTokenElement(type:KEEP_KEYWORD, text:Keep)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  IFailCommand
                    ShaderLabTokenType+FixedTokenElement(type:FAIL_KEYWORD, text:Fail)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IStencilOperation
                      ShaderLabTokenType+FixedTokenElement(type:ZERO_KEYWORD, text:Zero)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  IZfailCommand
                    ShaderLabTokenType+FixedTokenElement(type:ZFAIL_KEYWORD, text:ZFail)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IStencilOperation
                      ShaderLabTokenType+FixedTokenElement(type:REPLACE_KEYWORD, text:Replace)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:        ) spaces: "        "
              ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:        ) spaces: "        "
          IRegularPassDef
            ShaderLabTokenType+FixedTokenElement(type:PASS_KEYWORD, text:Pass)
            Whitespace(type:WHITESPACE, text: ) spaces: " "
            IRegularPassValue
              ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:            ) spaces: "            "
              IStencilCommand
                ShaderLabTokenType+FixedTokenElement(type:STENCIL_KEYWORD, text:Stencil)
                NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                IStencilValue
                  ShaderLabTokenType+FixedTokenElement(type:LBRACE, text:{)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  IRefCommand
                    ShaderLabTokenType+FixedTokenElement(type:REF_KEYWORD, text:Ref)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    INumericValue
                      ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:255)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  IReadMaskCommand
                    ShaderLabTokenType+FixedTokenElement(type:READ_MASK_KEYWORD, text:ReadMask)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    INumericValue
                      ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:134)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  IWriteMaskCommand
                    ShaderLabTokenType+FixedTokenElement(type:WRITE_MASK_KEYWORD, text:WriteMask)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    INumericValue
                      ShaderLabTokenType+GenericTokenElement(type:NUMERIC_LITERAL, text:155)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  ICompCommand
                    ShaderLabTokenType+FixedTokenElement(type:COMP_KEYWORD, text:Comp)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IComparisonFunctionValue
                      ShaderLabTokenType+FixedTokenElement(type:LESS_KEYWORD, text:Less)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  IPassCommand
                    ShaderLabTokenType+FixedTokenElement(type:PASS_KEYWORD, text:Pass)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IStencilOperation
                      ShaderLabTokenType+FixedTokenElement(type:INCR_SAT_KEYWORD, text:IncrSat)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  IFailCommand
                    ShaderLabTokenType+FixedTokenElement(type:FAIL_KEYWORD, text:Fail)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IStencilOperation
                      ShaderLabTokenType+FixedTokenElement(type:DECR_SAT_KEYWORD, text:DecrSat)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:                ) spaces: "                "
                  IZfailCommand
                    ShaderLabTokenType+FixedTokenElement(type:ZFAIL_KEYWORD, text:ZFail)
                    Whitespace(type:WHITESPACE, text: ) spaces: " "
                    IStencilOperation
                      ShaderLabTokenType+FixedTokenElement(type:INVERT_KEYWORD, text:Invert)
                  NewLine(type:NEW_LINE, text:\n) spaces: "\n"
                  Whitespace(type:WHITESPACE, text:            ) spaces: "            "
                  ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
              NewLine(type:NEW_LINE, text:\n) spaces: "\n"
              Whitespace(type:WHITESPACE, text:        ) spaces: "        "
              ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
          NewLine(type:NEW_LINE, text:\n) spaces: "\n"
          Whitespace(type:WHITESPACE, text:    ) spaces: "    "
          ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})
      NewLine(type:NEW_LINE, text:\n) spaces: "\n"
      ShaderLabTokenType+FixedTokenElement(type:RBRACE, text:})

