Language: PsiLanguageType:CG
ICgFile
  CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
  IConditionalDirective
    CgTokenNodeTypes+IfdefDirectiveTokenElement(type:IFDEF_DIRECTIVE, text:#ifdef)
    CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text: TRUE)
    CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
    IDirectiveInternalContent
      IGlobalVariableDeclaration
        ITypeName
          IBuiltInType
            CgKeywordTokenNode(type:FLOAT_KEYWORD, text:float)
        CgWhitespaceTokenNode(type:WHITESPACE, text: ) spaces: " "
        IIdentifier
          CgIdentifier(type:IDENTIFIER, text:foo)
        CgFixedLengthTokenNode(type:SEMICOLON, text:;)
    CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
    CgTokenNodeTypes+EndifDirectiveTokenElement(type:ENDIF_DIRECTIVE, text:#endif)
    CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text:)
  CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
  CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
  IConditionalDirective
    CgTokenNodeTypes+IfdefDirectiveTokenElement(type:IFDEF_DIRECTIVE, text:#ifdef)
    CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text: TRUE)
    IDirectiveInternalContent
    CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
    IElifDirective
      CgTokenNodeTypes+ElifDirectiveTokenElement(type:ELIF_DIRECTIVE, text:#elif)
      CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text: TRUE)
      IDirectiveInternalContent
      CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
      IElifDirective
        CgTokenNodeTypes+ElifDirectiveTokenElement(type:ELIF_DIRECTIVE, text:#elif)
        CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text: TRUE)
        IDirectiveInternalContent
        CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
        CgTokenNodeTypes+EndifDirectiveTokenElement(type:ENDIF_DIRECTIVE, text:#endif)
        CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text:)
  CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
  CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
  IConditionalDirective
    CgTokenNodeTypes+IfdefDirectiveTokenElement(type:IFDEF_DIRECTIVE, text:#ifdef)
    CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text: TRUE)
    IDirectiveInternalContent
    CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
    IElseDirective
      CgTokenNodeTypes+ElseDirectiveTokenElement(type:ELSE_DIRECTIVE, text:#else)
      CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text:)
      IDirectiveInternalContent
      CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
      CgTokenNodeTypes+EndifDirectiveTokenElement(type:ENDIF_DIRECTIVE, text:#endif)
      CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text:)
  CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
  CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
  CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
  IConditionalDirective
    CgTokenNodeTypes+IfdefDirectiveTokenElement(type:IFDEF_DIRECTIVE, text:#ifdef)
    CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text: TRUE)
    IDirectiveInternalContent
    CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
    IElifDirective
      CgTokenNodeTypes+ElifDirectiveTokenElement(type:ELIF_DIRECTIVE, text:#elif)
      CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text: TRUE)
      IDirectiveInternalContent
      CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
      IElseDirective
        CgTokenNodeTypes+ElseDirectiveTokenElement(type:ELSE_DIRECTIVE, text:#else)
        CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text:)
        IDirectiveInternalContent
        CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
        CgTokenNodeTypes+EndifDirectiveTokenElement(type:ENDIF_DIRECTIVE, text:#endif)
        CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text:)
  CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
  CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
  IConditionalDirective
    CgTokenNodeTypes+IfndefDirectiveTokenElement(type:IFNDEF_DIRECTIVE, text:#ifndef)
    CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text: DIRECTIVE_TEST)
    CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
    CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
    IDirectiveInternalContent
      IIncludeDirective
        CgTokenNodeTypes+IncludeDirectiveTokenElement(type:INCLUDE_DIRECTIVE, text:#include)
        CgGenericTokenNode(type:INCLUDE_DIRECTIVE_CONTENT, text: include_content)
      CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
      IDefineDirective
        CgTokenNodeTypes+DefineDirectiveTokenElement(type:DEFINE_DIRECTIVE, text:#define)
        CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text: define_content)
      CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
      IUndefDirective
        CgTokenNodeTypes+UndefDirectiveTokenElement(type:UNDEF_DIRECTIVE, text:#undef)
        CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text: undef_content)
      CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
      ILineDirective
        CgTokenNodeTypes+LineDirectiveTokenElement(type:LINE_DIRECTIVE, text:#line)
        CgGenericTokenNode(type:DIRECTIVE_CONTENT, text: line_content)
      CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
      IErrorDirective
        CgTokenNodeTypes+ErrorDirectiveTokenElement(type:ERROR_DIRECTIVE, text:#error)
        CgGenericTokenNode(type:DIRECTIVE_CONTENT, text: error_content)
      CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
      IWarningDirective
        CgTokenNodeTypes+WarningDirectiveTokenElement(type:WARNING_DIRECTIVE, text:#warning)
        CgGenericTokenNode(type:DIRECTIVE_CONTENT, text: warning_content)
      CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
      IPragmaDirective
        CgTokenNodeTypes+PragmaDirectiveTokenElement(type:PRAGMA_DIRECTIVE, text:#pragma)
        CgGenericTokenNode(type:DIRECTIVE_CONTENT, text: pragma_content)
    CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
    CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
    CgTokenNodeTypes+EndifDirectiveTokenElement(type:ENDIF_DIRECTIVE, text:#endif)
    CgGenericTokenNode(type:CODE_DIRECTIVE_CONTENT, text: endif_content)

