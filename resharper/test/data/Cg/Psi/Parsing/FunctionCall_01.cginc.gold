Language: PsiLanguageType:CG
ICgFile
  IDeclaration
    IVariableOrFunctionDeclaration
      IFunctionDeclaration
        IFunctionHeader
          IBuiltInType
            CgKeywordTokenNode(type:VOID_KEYWORD, text:void)
          CgWhitespaceTokenNode(type:WHITESPACE, text: ) spaces: " "
          IIdentifier
            CgIdentifier(type:IDENTIFIER, text:foo)
          CgFixedLengthTokenNode(type:LPAREN, text:()
          CgFixedLengthTokenNode(type:RPAREN, text:))
        IFunctionBody
          CgFixedLengthTokenNode(type:LBRACE, text:{)
          CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
          CgWhitespaceTokenNode(type:WHITESPACE, text:    ) spaces: "    "
          ICgBlock
            IExpressionStatement
              IIdentifier
                CgIdentifier(type:IDENTIFIER, text:bar)
              ICallOperator
                CgFixedLengthTokenNode(type:LPAREN, text:()
                IExpression
                  IAssignmentExpression
                    ITernaryExpression
                      IBinaryExpression
                        IPrefixExpression
                          IPostfixExpression
                            IIdentifier
                              CgIdentifier(type:IDENTIFIER, text:baz)
                CgFixedLengthTokenNode(type:RPAREN, text:))
            CgFixedLengthTokenNode(type:SEMICOLON, text:;)
          CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
          CgWhitespaceTokenNode(type:WHITESPACE, text:    ) spaces: "    "
          ICgBlock
            IExpressionStatement
              IIdentifier
                CgIdentifier(type:IDENTIFIER, text:bar)
              ICallOperator
                CgFixedLengthTokenNode(type:LPAREN, text:()
                IExpression
                  IAssignmentExpression
                    ITernaryExpression
                      IBinaryExpression
                        IPrefixExpression
                          IPostfixExpression
                            IIdentifier
                              CgIdentifier(type:IDENTIFIER, text:baz)
                            IFieldOperator
                              CgFixedLengthTokenNode(type:DOT, text:.)
                              IIdentifier
                                CgIdentifier(type:IDENTIFIER, text:a)
                CgFixedLengthTokenNode(type:RPAREN, text:))
            CgFixedLengthTokenNode(type:SEMICOLON, text:;)
          CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
          CgWhitespaceTokenNode(type:WHITESPACE, text:    ) spaces: "    "
          ICgBlock
            IExpressionStatement
              IIdentifier
                CgIdentifier(type:IDENTIFIER, text:bar)
              ICallOperator
                CgFixedLengthTokenNode(type:LPAREN, text:()
                IExpression
                  IAssignmentExpression
                    ITernaryExpression
                      IBinaryExpression
                        IPrefixExpression
                          IPostfixExpression
                            IIdentifier
                              CgIdentifier(type:IDENTIFIER, text:baz)
                            IFieldOperator
                              CgFixedLengthTokenNode(type:DOT, text:.)
                              IIdentifier
                                CgIdentifier(type:IDENTIFIER, text:a)
                        CgWhitespaceTokenNode(type:WHITESPACE, text: ) spaces: " "
                        IBinaryOperator
                          CgFixedLengthTokenNode(type:MULTIPLY, text:*)
                        CgWhitespaceTokenNode(type:WHITESPACE, text: ) spaces: " "
                        IBinaryExpression
                          IPrefixExpression
                            IPostfixExpression
                              IConstantValue
                                CgGenericTokenNode(type:NUMERIC_LITERAL, text:2)
                CgFixedLengthTokenNode(type:RPAREN, text:))
            CgFixedLengthTokenNode(type:SEMICOLON, text:;)
          CgNewLineTokenNode(type:NEW_LINE, text:\n) spaces: "\n"
          CgFixedLengthTokenNode(type:RBRACE, text:})

