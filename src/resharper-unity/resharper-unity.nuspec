<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <id>JetBrains.Unity</id>
    <title>Unity Support</title>
    <version>1.5.0</version>
    <authors>JetBrains slava.tutushkin</authors>
    <owners>JetBrains slava.tutushkin</owners>
    <summary>ReSharper support for Unity</summary>
    <description>Adds support for Unity.

&#8226; Highlights Unity event functions and fields with an icon in the editor gutter.
&#8226; Marks fields and methods implicitly used by Unity as in use.
&#8226; Knows about all Unity script classes (MonoBehaviour, ScriptableObject, EditorWindow, etc).
&#8226; Supports Unity API 5.2 - 5.5
&#8226; Support for undocumented functions such as OnValidate and OnPreGeneratingCSProjectFiles.
&#8226; Use Generate Code to create event functions, with parameters.
&#8226; Start typing for automatic completion of event function declarations in a class.
&#8226; Event function descriptions for methods and parameters displayed in tooltips and QuickDoc
&#8226; "Read more" in QuickDoc navigates to Unity API documentation.
&#8226; Code completion, find usages and rename support for Invoke, InvokeRepeating, IsInvoking and CancelInvoke. Also Start/StopCoroutine.
&#8226; Inspection and Quick Fix to use CompareTag instead of string comparison.
&#8226; Suppress naming consistency checks on event functions.
&#8226; Prevent ReSharper from suggesting `Assets` or `Scripts` as part of the namespace of your code.
&#8226; Automatically sets Unity projects to C# 4 or C# 6. No more suggestions for features that won't compile!
&#8226; Highlights UnityEngine.Color and Color32. Edit via colour palette quick fix.
&#8226; Treats Unity debug assertions as assertion methods in ReSharper control flow analysis.
&#8226; String formatting assistance for debug log methods.
</description>
<releaseNotes>
&#8226; ReSharper 2016.3 support (#80, #90)
&#8226; Add inspection and Quick Fix to use CompareTag instead of string comparison (#82)
&#8226; Support Unity API for 5.2 - 5.5 (#81)
&#8226; Support undocumented ScriptableObject.OnValidate and Reset (#79)
&#8226; Support method name in string literal of MonoBehaviour.IsInvoking (#85)
&#8226; Support method name in string literal for MonoBehaviour.Start/StopCoroutine (#83)
&#8226; Add gutter icon and "Create" context action for Unity classes (#77)
&#8226; Fix method generation for static event functions (#73)
&#8226; Improve recognition of serialised fields (#87)
&#8226; Remove duplicate items in auto complete list (#92)

From 1.4.0:
&#8226; Enable functionality in projects that reference Unity assemblies, not just those that have the VSTU project flavour GUID (#53)
&#8226; Improve handling of C# language version. Default is correctly set to C# 4, not 5. Uses C# 6 if option is enabled in Unity 5.5. Handles the CSharp60Support plugin. (#50, #60)
&#8226; Treat UnityEngine.Debug.Assert as assertion methods, so ReSharper includes asserts in control flow analysis. (#62, #63 - thanks @joshuaoconnor!)
&#8226; Add string formatting inspections for debug assertion messages.
&#8226; Renamed "message handlers" to "event functions", as per the Unity documentation.
&#8226; Display a "gutter" icon for implicitly used event functions and fields. (#58)
&#8226; Display colour highlights and the colour palette picker for UnityEngine.Color and UnityEngine.Color32. (#51)
&#8226; Fix MonoBehaviour.Invoke code completion and rename support in string literals to work with the correct class, not just the current class. (#66)
&#8226; Support undocumented messages, such as OnGeneratedCSProjectFiles. (#59)
&#8226; Fix namespace provider settings for Assets and Assets\Scripts folders. (#64)
&#8226; Sort event functions alphabetically by default in code completion.

From previous releases:
&#8226; ReSharper 2016.2 support. Thanks @cmcpasserby! (#44, #46)
&#8226; Added support for event functions for all Unity classes, not just MonoBehaviour. Thanks @swalex, @rorydriscoll! (#20, #29, #44)
&#8226; External annotations to improve ReSharper's analysis, e.g. implicit usage and nullability of Component.gameObject. Thanks @bigbadtrumpet! (#34, #13, #15, #23, #42, #43)
&#8226; Code completion, find usages and rename support for Invoke, InvokeRepeating and CancelInvoke (#41)
&#8226; Auto-suggest event function completion when creating methods
&#8226; Event function descriptions for methods and parameters displayed in tooltips and QuickDoc
&#8226; "Read more" in QuickDoc navigates to Unity API documentation
&#8226; Suppress naming consistency checks on event functions
&#8226; Add parameters to generated event functions (#8)
&#8226; Automatically sets Unity projects to C# 5. No more incompatible C# 6 suggestions! (#5)
</releaseNotes>
    <projectUrl>https://github.com/JetBrains/resharper-unity</projectUrl>
    <licenseUrl>https://raw.githubusercontent.com/JetBrains/resharper-unity/master/license.txt</licenseUrl>
    <iconUrl>http://resharper-plugins.jetbrains.com/Content/Images/packageReSharper.png</iconUrl>
    <copyright>Copyright 2016 JetBrains, s.r.o</copyright>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <dependencies>
      <dependency id="Wave" version="[7.0]" />
    </dependencies>
    <tags>resharper unity unity3d</tags>
  </metadata>
  <files>
    <file src="bin\Release\JetBrains.ReSharper.Plugins.Unity.dll" target="DotFiles" />
    <file src="annotations\UnityEngine.xml" target="DotFiles\Extensions\JetBrains.Unity\annotations\UnityEngine.xml" />
    <file src="annotations\UnityEditor.xml" target="DotFiles\Extensions\JetBrains.Unity\annotations\UnityEditor.xml" />
  </files>
</package>
