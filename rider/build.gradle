plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.2.10'
    id 'org.jetbrains.intellij' version '0.2.18'
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib"
}

group 'com.jetbrains'

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

// Renaming to be more meaningful, but would also require updating build.ps1
// and also the build configuration settings in TeamCity
if (!ext.has("Source"))
    ext.Source = null
ext.PackageSource = ext.Source

if (!ext.has("BuildCounter"))
    ext.BuildCounter = 9999

if (!ext.has("BuildConfiguration"))
    ext.BuildConfiguration = "Release"

if (!ext.has("RiderOnly") || ext.RiderOnly ==~ "(?i)False")
    ext.RiderOnly = false

if (!ext.has("SkipNuGetRestore"))
    ext.SkipNuGetRestore = false

version "2.1.3.$BuildCounter"

logger.lifecycle("version=$version")

apply from: 'backend.gradle'
apply from: 'frontend.gradle'

task resolveDependencies {
  description 'Resolves all projects dependencies from the repository'
  group 'Build Server'

  doLast {
    rootProject.allprojects { project ->
      project.buildscript.configurations.forEach { configuration ->
        if (configuration.canBeResolved) {
          configuration.resolve()
        }
      }

      project.configurations.forEach { configuration ->
        if (configuration.canBeResolved) {
          configuration.resolve()
        }
      }
    }
  }
}

if (System.env['TRAVIS'] != null) {
    gradle.taskGraph.addTaskExecutionListener(new TravisEventLogger())
    // gradle.useLogger(new TravisEventLogger())
}

class TravisEventLogger extends BuildAdapter implements TaskExecutionListener {

    public void beforeExecute(Task task) {
        println "travis_fold:start:$task.name\033[33;1m:$task.name\033[0m"
    }

    public void afterExecute(Task task, TaskState state) {
        println "\ntravis_fold:end:$task.name\r"
    }
}
